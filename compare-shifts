#! /usr/bin/env python3

"""Compare various choices of shift for sliders.

usage:

    improve-slider --repo=<repo> [<c>=<path>...]

where each <path> is a *.sliders file with or without shifts, and <c>
is the character with which that file's shift will be presented.

"""

import sys
import os
import io
import re
import argparse
from collections import OrderedDict

sys.path.insert(0, os.path.dirname(sys.argv[0]))

import diff_heuristics
from diff_heuristics import compute_slider
from diff_heuristics import find_slider
from diff_heuristics import iter_shifts


def main(args):
    parser = argparse.ArgumentParser(
        description='Read a slider shift from a diff'
        )
    parser.add_argument('--repo', type=str)
    parser.add_argument('--all', '-a')
    parser.add_argument('--verbose', '-v')
    parser.add_argument('columns', nargs='+')

    options = parser.parse_args(args)

    if options.verbose:
        diff_heuristics.verbose = True

    column_names = []

    # A dict {(old, new, prefix, line_number) : {column_name : shift}}:
    shifts = OrderedDict()

    slider_intern = {}

    for column in options.columns:
        (column_name, path) = column.split('=', 1)
        column_names.append(column_name)
        with open(path) as f:
            for (old, new, prefix, line_number, shift) in iter_shifts(f):
                params = (old, new, prefix, line_number)
                params = slider_intern.setdefault(params, params)
                shifts.setdefault(params, {})[column_name] = shift

    for ((old, new, prefix, line_number), values) in shifts.items():
        (old_sha1, old_filename) = old.split(':', 1)
        (new_sha1, new_filename) = new.split(':', 1)
        columns = []
        for column_name in column_names:
            shift = values.get(column_name)
            if shift is None:
                column_name = ' '
                shift = 0
            columns.append((column_name, shift))

        shifts_seen = set(shift for (column_name, shift) in columns)

        if options.all or len(shifts_seen) > 1 or list(shifts_seen) != [0]:
            slider = compute_slider(
                options.repo,
                old_sha1, old_filename,
                new_sha1, new_filename,
                prefix, line_number,
                )

            print('%s %s %s %d' % (old, new, prefix, line_number))
            print('# %s' % ('v' * 60,))
            slider.show_comparison(columns, line_prefix='# ')
            print('# %s' % ('^' * 60,))
            print('#')


if __name__ == '__main__':
    main(sys.argv[1:])
